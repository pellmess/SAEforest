% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MERFranger.R
\name{MERFranger}
\alias{MERFranger}
\title{Main function for unit-level MERF}
\usage{
MERFranger(
  Y,
  X,
  random,
  data,
  initialRandomEffects = 0,
  ErrorTolerance = 1e-04,
  MaxIterations = 25,
  importance = "none",
  na.rm = T,
  ...
)
}
\arguments{
\item{Y}{metric input value of target variable}

\item{X}{matrix of predictive covariates}

\item{random}{Specification of random effects terms following the syntax of \link[lme4]{lmer}.
Random-effect terms are specified by vertical bars (|) separating expressions for design matrices
from grouping factors. For further details see \link[lme4]{lmer} and the example below.}

\item{data}{data.frame of sample data including the specified elements of \code{Y} and
\code{X}.}

\item{initialRandomEffects}{numeric value or vector of initial estimate of random effects.
Defaults to 0.}

\item{ErrorTolerance}{numeric value to monitor the MERF algorithm's convergence. Defaults to 1e-04}

\item{MaxIterations}{numeric value specifying the maximal amount of iterations for the
MERF algorithm. Defaults to 25.}

\item{importance}{variable importance mode processed by the
random forest from the \pkg{ranger}. Must be 'none', 'impurity', 'impurity_corrected',
'permutation'. For further details see \link[ranger]{ranger}.}

\item{na.rm}{logical. Whether missing values should be removed. Defaults to TRUE.}

\item{...}{additional parameters are directly passed to the random forest \link[ranger]{ranger}.
Most importanc parameters are for instance mtry (number of variables to possibly split at
in each node), or num.tree (number of trees). For further details on possible parameters
see \link[ranger]{ranger} and the example below.}
}
\value{
object of class MERFmodel includes the following elements:

\item{\code{Forest}}{a random forest of type 'ranger' modelling fixed effects
of the model.}
\item{\code{EffectModel}}{a model of random effects of type 'lmer' capturing
tructural component of MERFs and modeling random components.}
\item{\code{RandomEffects}}{list element containing the values of random intercepts from \code{EffectModel}.}
\item{\code{RanEffSD}}{numeric value of the standard deviation of random intercepts.}
\item{\code{ErrorSD}}{numeric value of standard devition of unit-level errors.}
\item{\code{VarianceCovariance}}{VarCor matrix from \code{EffectModel}.}
\item{\code{LogLik}}{vector with numerical entries showing the loglikelihood of the MERF algorithm.}
\item{\code{IterationsUsed}}{numeric number of interatirons used until covergence of the MERF algorithm.}
\item{\code{OOBresiduals}}{vector of OOB-residuals.}
\item{\code{Random}}{character specifying the random intercept in the random effects model.}
\item{\code{ErrorTolerance}}{numerical value to monitor the MERF algorithm's convergence.}
\item{\code{initialRandomEffects}}{numeric value or vector of intial specification of random effects.}
\item{\code{MaxIterations}}{numeric value specifying the maximal amount of iterations for the
MERF algorithm.}
\item{\code{call}}{the summarized function call producing the object.}
\item{\code{data_specs}}{data characteristics such as domain specific sample sizes or number of
out-of-sample areas.}
\item{\code{data}}{the used survey sample data.}
}
\description{
This function enables the use of Mixed Effects Random Forests (MERFs) by effectively
combining a random forest from \pkg{ranger} with a model capturing random effects from
\pkg{lme4}. The MERF algorithm is an algorithmic procedure reminiscent of an EM-algorithm
(see Details).  The function is the base-function for the three wrapping functions
(\code{\link{SAEforest_mean}}, \code{\link{SAEforest_meanAGG}}, \code{\link{SAEforest_nonLin}}).
The function \code{MERFranger} allows to model complex patterns of structural relations
or spatial correlations and should only be used for applications exceeding the scope of
existing wrapper functions or for further research.
}
\details{
The MERF algorithm iteratively optimizes two seperate steps: a) the random forest
function, assuming the random effects term to be correct and b) estimates the random
effects part, assuming the OOB-predictions from the forest to be correct. Overall convergence
of the algorithm is monitored by log-likelihood of a joint model of both components. For
further details see Krennmair and Schmid or Hajem et. al. (2014).

Note that the \code{MERFmodel} object is a composition of elements from a random forest of class
'ranger' and a random effects model of class 'lmerMod'.  Thus, all generic functions applicable
to objects of classes 'ranger' and 'lmerMod' can be used on these elements. For furhter details
on generic functions see \code{\link[ranger]{ranger}} and \code{\link[lme4]{lmer}} as well as
the examples below.
}
\references{
Krennmair, P. and Schmid, T. (202X). WP 1

Hajjem et al. 2014. MERF paper
}
\seealso{
\code{\link{SAEforest}}
}
